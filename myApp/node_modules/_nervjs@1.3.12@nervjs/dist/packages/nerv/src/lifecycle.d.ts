import { Component, CompositeComponent } from 'nerv-shared';
import FullComponent from './full-component';
import Stateless from './stateless-component';
export declare function mountVNode(vnode: any, parentContext: any, parentComponent?: any): Text | Element | Comment | DocumentFragment | null;
export declare function mountComponent(vnode: FullComponent, parentContext: object, parentComponent: any): Element;
export declare function mountStatelessComponent(vnode: Stateless, parentContext: any): Element;
export declare function getChildContext(component: any, context?: {}): any;
export declare function renderComponent(component: Component<any, any>): any;
export declare function flushMount(): void;
export declare function reRenderComponent(prev: CompositeComponent, current: CompositeComponent): any;
export declare function reRenderStatelessComponent(prev: Stateless, current: Stateless, parentContext: Object, domNode: Element): any;
export declare function updateComponent(component: any, isForce?: boolean): any;
export declare function unmountComponent(vnode: FullComponent): void;
export declare function unmountStatelessComponent(vnode: Stateless): void;
